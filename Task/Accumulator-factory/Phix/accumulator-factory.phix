sequence accumulators = {}

function accumulate(integer id, atom v)
    accumulators[id] += v
    return accumulators[id]
end function
constant r_accumulate = routine_id("accumulate")

function accumulator_factory(atom initv=0)
    accumulators = append(accumulators,initv)
    return {r_accumulate,length(accumulators)}
end function

function call_function(object rid, object args)
    if sequence(rid) then
        {rid, integer id} = rid
        args = id&args
    end if
    return call_func(rid,args)
end function

function standard_function()
    return "standard function"
end function
constant r_standard_function = routine_id("standard_function")

constant x = accumulator_factory(1),
         y = accumulator_factory(3)
{} = call_function(x,5)
{} = call_function(y,3)
?call_function(x,2.3)
?call_function(y,4)
?call_function(r_standard_function,{})

function r2cf(sequence fraction)
    integer {numerator, denominator} = fraction
    integer quotient = 0
    if denominator!=0 then
        quotient = floor(numerator/denominator)
        {numerator,denominator} = {denominator,mod(numerator,denominator)}
    end if
    return {quotient,{numerator,denominator}}
end function

constant DENOMINATOR = 2
procedure test(string txt, sequence tests)
sequence fraction
integer quotient
    printf(1,"Running %s :",{txt})
    for i=1 to length(tests) do
        fraction = tests[i]
        printf(1,"\nFor N = %d, D = %d :",fraction)
        while fraction[DENOMINATOR]!=0 do
            {quotient,fraction} = r2cf(fraction)
            printf(1," %d ",quotient)
        end while
    end for
    printf(1,"\n\n")
end procedure

constant examples = {{1,2}, {3,1}, {23,8}, {13,11}, {22,7}, {-151,77}},
         sqrt2 = {{14142,10000}, {141421,100000}, {1414214,1000000}, {14142136,10000000}},
         pi = {{31,10}, {314,100}, {3142,1000}, {31428,10000}, {314285,100000}, {3142857,1000000}, {31428571,10000000}, {314285714,100000000}}

test("the examples",examples)
test("for sqrt(2)",sqrt2)
test("for pi",pi)

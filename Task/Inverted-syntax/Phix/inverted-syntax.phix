if end
(&"test.exw"[1]cl)system
then >2(cl)length if
(&"\n"(pgm)mung,"test.exw")write_file = {}
write_file.e include
([$]cl)get_text = pgm string
()command_line = cl sequence
function end
("\n",lines)join return
for end (nup,rip,((([i]lines)split)reverse)join)substitute_all = [i]lines do (lines)length to 1=i for
(("\r\n",(rip,pun,pgm)substitute_all)split)reverse=lines sequence
(pgm string)mung function

(true,"*",("*","",3,7,"       -<>{}@!       ")join_by)split = rip constant
(true,"*",("*","",1,7,"-,=][)(")join_by)split = nup constant
(true,"*",("*","",1,7,"-,=[]()")join_by)split = pun constant
demo\rosetta\inverted_syntax.exw --

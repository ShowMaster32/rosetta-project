atom r, l
function Kaprekar(integer n, base=10)
atom sq=n*n, basen = base
    if n=1 then return true end if
    r=0
    while r<n do
        r = mod(sq,basen)
        l = floor(sq/basen)
        if r and l and l+r=n then return true end if
        basen *= base
    end while
    return false
end function

sequence s = {}
for i=1 to 10000 do
    if Kaprekar(i) then
        s &= i
    end if
end for
printf(1,"There are %d Kaprekar numbers between 1 and 10,000:\n",length(s))
?s
integer c = 0
for i=1 to 1000000 do
    c += Kaprekar(i)
end for
printf(1,"There are %d Kaprekar numbers between 1 and 1,000,000\n",c)

function base17(sequence s)
    for i=1 to length(s) do
        atom si = s[i]
        string num = ""
        while si do
            integer digit = mod(si,17)
            si = floor(si/17)
            num = digit+iff(digit<=9?'0':87)&num
        end while
        s[i] = num
    end for
    return s
end function

s = {} r = 1 l = 1
for i=1 to 1000000 do
    if Kaprekar(i,17) then
        s = append(s,{i,i*i,l,r})
    end if
end for
printf(1,"There are %d Kaprekar base 17 numbers between 1 and 1,000,000 (decimal):\n",length(s))
s[5..-5] = {}
for i=1 to length(s) do
    printf(1,"%s squared %s, split %s+%s\n",base17(s[i]))
    if i=4 then printf(1," ...\n") end if
end for

function magic_square(integer n)
    if mod(n,2)!=1 or n<1 then return false end if
    sequence square = repeat(repeat(0,n),n)
    for i=1 to n do
        for j=1 to n do
            square[i,j] = n*mod(2*i-j+n-1,n) + mod(2*i+j-2,n) + 1
        end for
    end for
    return square
end function

procedure check(sequence sq)
    integer n = length(sq)
    integer magic = n*(n*n+1)/2
    integer bd=0, fd=0
    for i=1 to length(sq) do
        if sum(sq[i])!=magic then ?9/0 end if
        if sum(columnize(sq,i))!=magic then ?9/0 end if
        bd += sq[i,i]
        fd += sq[n-i+1,n-i+1]
    end for
    if bd!=magic or fd!=magic then ?9/0 end if
end procedure

for i=1 to 7 by 2 do
    sequence square = magic_square(i)
    printf(1,"maqic square of order %d, sum: %d\n", {i,sum(square[i])})
    string fmt = sprintf("%%%dd",length(sprintf("%d",i*i)))
    pp(square,{pp_Nest,1,pp_IntFmt,fmt,pp_StrFmt,1,pp_Pause,0})
    check(square)
end for
